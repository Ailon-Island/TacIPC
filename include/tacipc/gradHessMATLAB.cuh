#pragma once

namespace tacipc {
template<class T>
constexpr void ortho_grad_hess_func(const T* in1, T* grad, T* hess)
{
  // ORTHO_GRAD_HESS_FUNC
  //     [GRAD,HESS] = ORTHO_GRAD_HESS_FUNC(IN1)
  //     This function was generated by the Symbolic Math Toolbox version 9.1.
  //     17-Apr-2023 13:56:34
  auto t2 = in1[0] * in1[0];
  auto t3 = in1[1] * in1[1];
  auto t4 = in1[2] * in1[2];
  auto t5 = in1[3] * in1[3];
  auto t6 = in1[4] * in1[4];
  auto t7 = in1[5] * in1[5];
  auto t8 = in1[6] * in1[6];
  auto t9 = in1[7] * in1[7];
  auto t10 = in1[8] * in1[8];
  auto t11 = in1[0] * in1[3];
  auto t12 = in1[1] * in1[4];
  auto t13 = in1[0] * in1[6];
  auto t14 = in1[2] * in1[5];
  auto t15 = in1[1] * in1[7];
  auto t16 = in1[3] * in1[6];
  auto t17 = in1[2] * in1[8];
  auto t18 = in1[4] * in1[7];
  auto t19 = in1[5] * in1[8];
  auto t103 = in1[0] * in1[1];
  auto t20 = t103 * 4.0;
  auto t21_tmp = in1[0] * in1[2];
  auto t21 = t21_tmp * 4.0;
  auto t23_tmp = in1[1] * in1[2];
  auto t23 = t23_tmp * 4.0;
  auto t24 = in1[0] * in1[4] * 4.0;
  auto t25 = in1[1] * in1[3] * 4.0;
  auto t26 = in1[0] * in1[5] * 4.0;
  auto t28 = in1[2] * in1[3] * 4.0;
  auto t30 = in1[1] * in1[5] * 4.0;
  auto t31 = in1[2] * in1[4] * 4.0;
  auto t32 = in1[0] * in1[7] * 4.0;
  auto t33 = in1[1] * in1[6] * 4.0;
  auto t89 = in1[3] * in1[4];
  auto t35 = t89 * 4.0;
  auto t36 = in1[0] * in1[8] * 4.0;
  auto t38 = in1[2] * in1[6] * 4.0;
  auto t39_tmp = in1[3] * in1[5];
  auto t39 = t39_tmp * 4.0;
  auto t40 = in1[1] * in1[8] * 4.0;
  auto t41 = in1[2] * in1[7] * 4.0;
  auto t43_tmp = in1[4] * in1[5];
  auto t43 = t43_tmp * 4.0;
  auto t45 = in1[3] * in1[7] * 4.0;
  auto t46 = in1[4] * in1[6] * 4.0;
  auto t47 = in1[3] * in1[8] * 4.0;
  auto t49 = in1[5] * in1[6] * 4.0;
  auto t50 = in1[4] * in1[8] * 4.0;
  auto t51 = in1[5] * in1[7] * 4.0;
  auto t106 = in1[6] * in1[7];
  auto t53 = t106 * 4.0;
  auto t97 = in1[6] * in1[8];
  auto t54 = t97 * 4.0;
  auto t55_tmp = in1[7] * in1[8];
  auto t55 = t55_tmp * 4.0;
  auto t22 = t11 * 4.0;
  auto t27 = t12 * 4.0;
  auto t29 = t13 * 4.0;
  auto t34 = t14 * 4.0;
  auto t37 = t15 * 4.0;
  auto t42 = t16 * 4.0;
  auto t44 = t17 * 4.0;
  auto t48 = t18 * 4.0;
  auto t52 = t19 * 4.0;
  auto t74 = t2 * 4.0;
  auto t75 = t3 * 4.0;
  auto t76 = t4 * 4.0;
  auto t77 = t5 * 4.0;
  auto t78 = t6 * 4.0;
  auto t79 = t7 * 4.0;
  auto t80 = t8 * 4.0;
  auto t81 = t9 * 4.0;
  auto t82 = t10 * 4.0;
  auto t83 = (t11 + t12) + t14;
  auto t84 = (t13 + t15) + t17;
  auto t85 = (t16 + t18) + t19;
  auto t86 = ((t2 + t3) + t4) - 1.0;
  auto t87 = ((t5 + t6) + t7) - 1.0;
  auto t88 = ((t8 + t9) + t10) - 1.0;
  grad[0] = (in1[0] * t86 * 4.0 + in1[3] * t83 * 4.0) + in1[6] * t84 * 4.0;
  grad[1] = (in1[1] * t86 * 4.0 + in1[4] * t83 * 4.0) + in1[7] * t84 * 4.0;
  grad[2] = (in1[2] * t86 * 4.0 + in1[5] * t83 * 4.0) + in1[8] * t84 * 4.0;
  grad[3] = (in1[0] * t83 * 4.0 + in1[3] * t87 * 4.0) + in1[6] * t85 * 4.0;
  grad[4] = (in1[1] * t83 * 4.0 + in1[4] * t87 * 4.0) + in1[7] * t85 * 4.0;
  grad[5] = (in1[2] * t83 * 4.0 + in1[5] * t87 * 4.0) + in1[8] * t85 * 4.0;
  grad[6] = (in1[0] * t84 * 4.0 + in1[3] * t85 * 4.0) + in1[6] * t88 * 4.0;
  grad[7] = (in1[1] * t84 * 4.0 + in1[4] * t85 * 4.0) + in1[7] * t88 * 4.0;
  grad[8] = (in1[2] * t84 * 4.0 + in1[5] * t85 * 4.0) + in1[8] * t88 * 4.0;
  auto t92 = (t20 + t35) + t106 * 8.0;
  auto t93 = (t20 + t53) + t89 * 8.0;
  auto t94 = (t35 + t53) + t103 * 8.0;
  auto t95 = (t21 + t39) + t97 * 8.0;
  t21 = (t21 + t54) + t39_tmp * 8.0;
  t97 = (t39 + t54) + t21_tmp * 8.0;
  t53 = (t23 + t43) + t55_tmp * 8.0;
  t35 = (t23 + t55) + t43_tmp * 8.0;
  t103 = (t43 + t55) + t23_tmp * 8.0;
  t89 = (t22 + t27) + t14 * 8.0;
  t20 = (t22 + t34) + t12 * 8.0;
  t88 = (t27 + t34) + t11 * 8.0;
  t87 = (t29 + t37) + t17 * 8.0;
  t86 = (t29 + t44) + t15 * 8.0;
  t85 = (t37 + t44) + t13 * 8.0;
  t84 = (t42 + t48) + t19 * 8.0;
  t83 = (t42 + t52) + t18 * 8.0;
  t106 = (t48 + t52) + t16 * 8.0;
  hess[0] = ((((t2 * 12.0 + t75) + t76) + t77) + t80) - 4.0;
  hess[1] = t94;
  hess[2] = t97;
  hess[3] = t88;
  hess[4] = t25;
  hess[5] = t28;
  hess[6] = t85;
  hess[7] = t33;
  hess[8] = t38;
  hess[9] = t94;
  hess[10] = ((((t3 * 12.0 + t74) + t76) + t78) + t81) - 4.0;
  hess[11] = t103;
  hess[12] = t24;
  hess[13] = t20;
  hess[14] = t31;
  hess[15] = t32;
  hess[16] = t86;
  hess[17] = t41;
  hess[18] = t97;
  hess[19] = t103;
  hess[20] = ((((t4 * 12.0 + t74) + t75) + t79) + t82) - 4.0;
  hess[21] = t26;
  hess[22] = t30;
  hess[23] = t89;
  hess[24] = t36;
  hess[25] = t40;
  hess[26] = t87;
  hess[27] = t88;
  hess[28] = t24;
  hess[29] = t26;
  hess[30] = ((((t5 * 12.0 + t74) + t78) + t79) + t80) - 4.0;
  hess[31] = t93;
  hess[32] = t21;
  hess[33] = t106;
  hess[34] = t46;
  hess[35] = t49;
  hess[36] = t25;
  hess[37] = t20;
  hess[38] = t30;
  hess[39] = t93;
  hess[40] = ((((t6 * 12.0 + t75) + t77) + t79) + t81) - 4.0;
  hess[41] = t35;
  hess[42] = t45;
  hess[43] = t83;
  hess[44] = t51;
  hess[45] = t28;
  hess[46] = t31;
  hess[47] = t89;
  hess[48] = t21;
  hess[49] = t35;
  hess[50] = ((((t7 * 12.0 + t76) + t77) + t78) + t82) - 4.0;
  hess[51] = t47;
  hess[52] = t50;
  hess[53] = t84;
  hess[54] = t85;
  hess[55] = t32;
  hess[56] = t36;
  hess[57] = t106;
  hess[58] = t45;
  hess[59] = t47;
  hess[60] = ((((t8 * 12.0 + t74) + t77) + t81) + t82) - 4.0;
  hess[61] = t92;
  hess[62] = t95;
  hess[63] = t33;
  hess[64] = t86;
  hess[65] = t40;
  hess[66] = t46;
  hess[67] = t83;
  hess[68] = t50;
  hess[69] = t92;
  hess[70] = ((((t9 * 12.0 + t75) + t78) + t80) + t82) - 4.0;
  hess[71] = t53;
  hess[72] = t38;
  hess[73] = t41;
  hess[74] = t87;
  hess[75] = t49;
  hess[76] = t51;
  hess[77] = t84;
  hess[78] = t95;
  hess[79] = t53;
  hess[80] = ((((t10 * 12.0 + t76) + t79) + t80) + t81) - 4.0;
}

} // namespace tacipc